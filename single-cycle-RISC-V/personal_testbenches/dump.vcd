$date
	Mon Oct 10 02:38:15 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module alu_tb $end
$var wire 5 ! shamt [4:0] $end
$var wire 5 " rs2 [4:0] $end
$var wire 5 # rs1 [4:0] $end
$var wire 5 $ rd [4:0] $end
$var wire 7 % opcode [6:0] $end
$var wire 7 & funct7 [6:0] $end
$var wire 3 ' funct3 [2:0] $end
$var wire 32 ( alu_out [31:0] $end
$var reg 1 ) B_sel $end
$var reg 4 * alu_sel [3:0] $end
$var reg 32 + data_A [31:0] $end
$var reg 32 , data_B [31:0] $end
$var reg 32 - inst [31:0] $end
$scope module decoder_0 $end
$var wire 32 . inst [31:0] $end
$var wire 5 / shamt [4:0] $end
$var wire 5 0 rs2 [4:0] $end
$var wire 5 1 rs1 [4:0] $end
$var wire 5 2 rd [4:0] $end
$var wire 7 3 opcode [6:0] $end
$var wire 7 4 funct7 [6:0] $end
$var wire 3 5 funct3 [2:0] $end
$upscope $end
$scope module dut $end
$var wire 1 ) B_sel $end
$var wire 4 6 alu_sel [3:0] $end
$var wire 32 7 data_A [31:0] $end
$var wire 32 8 data_B [31:0] $end
$var wire 32 9 alu_out [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b110011001100110011100001010010 9
b10100011111 8
b110011001100110011001100110011 7
b0 6
b0 5
b101000 4
b10011 3
b11 2
b11 1
b11111 0
b11111 /
b1010001111100011000000110010011 .
b1010001111100011000000110010011 -
b10100011111 ,
b110011001100110011001100110011 +
b0 *
1)
b110011001100110011100001010010 (
b0 '
b101000 &
b10011 %
b11 $
b11 #
b11111 "
b11111 !
$end
#10
b110 *
b110 6
b10011001100110011001 (
b10011001100110011001 9
b10010 $
b10010 2
b101 '
b101 5
b1001 #
b1001 1
b1100 "
b1100 0
b0 &
b0 4
b1100 !
b1100 /
b1100 ,
b1100 8
b10011001100110011001100110011001 +
b10011001100110011001100110011001 7
b110001001101100100010011 -
b110001001101100100010011 .
#20
b0 (
b0 9
b101 *
b101 6
0)
b110011 %
b110011 3
b1 '
b1 5
b100 #
b100 1
b1001 "
b1001 0
b1001 !
b1001 /
b10011001100110011001100110011001 ,
b10011001100110011001100110011001 8
b1000100010001000100010001000100 +
b1000100010001000100010001000100 7
b100100100001100100110011 -
b100100100001100100110011 .
#30
b110 *
b110 6
b1100 $
b1100 2
b101 '
b101 5
b10 #
b10 1
b100010001000100010001000100010 +
b100010001000100010001000100010 7
b100100010101011000110011 -
b100100010101011000110011 .
#40
b111 *
b111 6
b1110 $
b1110 2
b11 #
b11 1
b100000 &
b100000 4
b110011001100110011001100110011 +
b110011001100110011001100110011 7
b1000000100100011101011100110011 -
b1000000100100011101011100110011 .
#50
